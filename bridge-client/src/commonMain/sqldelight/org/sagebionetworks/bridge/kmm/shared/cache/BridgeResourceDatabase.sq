import org.sagebionetworks.bridge.kmm.shared.cache.ResourceType;
import org.sagebionetworks.bridge.kmm.shared.cache.ResourceStatus;

CREATE TABLE Resource (
identifier TEXT NOT NULL,
secondaryId TEXT NOT NULL,
type TEXT AS ResourceType NOT NULL,
studyId TEXT NOT NULL,
json TEXT,
lastUpdate INTEGER NOT NULL,
status TEXT AS ResourceStatus NOT NULL,
needSave INTEGER AS kotlin.Boolean NOT NULL DEFAULT 0,
PRIMARY KEY (identifier, secondaryId, type, studyId)
);

CREATE TABLE EtagCache (
url TEXT NOT NULL,
etag TEXT NOT NULL,
PRIMARY KEY (url)
);

insertUpdateResource:
INSERT OR REPLACE INTO Resource(identifier, secondaryId, type, studyId, json, lastUpdate, status, needSave)
VALUES(?, ?,?, ?, ?, ?, ?, ?);

removeAllResources:
DELETE FROM Resource;

selectAllResourcesByType:
SELECT * FROM Resource
WHERE type = ? AND studyId = ?;

removeAllResourcesByType:
DELETE FROM Resource
WHERE type = ? AND studyId = ?;

selectResourceById:
SELECT * FROM Resource
WHERE identifier = ? AND type = ? AND studyId = ?;

selectResourceBySecondaryId:
SELECT * FROM Resource
WHERE secondaryId = ? AND type = ? AND studyId = ?;

removeResourceById:
DELETE FROM Resource
WHERE identifier = ? AND type = ? AND studyId = ?;

selectResourceByIds:
SELECT * FROM Resource
WHERE identifier IN ? AND type = ? AND studyId = ?;

selectResourceNeedSave:
SELECT * FROM Resource
WHERE needSave = 1 AND type = ? AND studyId = ?;

selectEtag:
SELECT * FROM EtagCache
WHERE url = ?;

insertUpdateEtag:
INSERT OR REPLACE INTO EtagCache(url, etag)
VALUES(?, ?);

removeEtag:
DELETE FROM EtagCache
WHERE url = ? ;

removeAllEtags:
DELETE FROM EtagCache;