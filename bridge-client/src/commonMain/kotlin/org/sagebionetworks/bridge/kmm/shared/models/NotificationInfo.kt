/**
* Bridge Server API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 0.21.29
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package org.sagebionetworks.bridge.kmm.shared.models

import kotlinx.serialization.Serializable

import kotlinx.serialization.SerialName

/**
 * A notification to show to a participant as part of the execution of a scheduled session. 
 * @param notifyAt 
 * @param offset The time after a window starts or before it ends (based on the `notifyAt` property) when a notification should be shown to the user.
 * @param interval If a window lasts for more thatn twenty-four hours, a notification can be repeated on a daily repeat value. Only day values are allowed.
 * @param allowSnooze Allow the participant to “snooze” a notification or reminder (dismiss it with some amount of time before it occurs again). Cannot be true if `notifyAt` is null.
 * @param message 
 * @param type NotificationInfo
 */
@Serializable
data class NotificationInfo (
    @SerialName("notifyAt")
    val notifyAt: NotificationType,
    /* The time after a window starts or before it ends (based on the `notifyAt` property) when a notification should be shown to the user. */
    @SerialName("offset")
    val offset: kotlin.String? = null,
    /* If a window lasts for more thatn twenty-four hours, a notification can be repeated on a daily repeat value. Only day values are allowed. */
    @SerialName("interval")
    val interval: kotlin.String? = null,
    /* Allow the participant to “snooze” a notification or reminder (dismiss it with some amount of time before it occurs again). Cannot be true if `notifyAt` is null. */
    @SerialName("allowSnooze")
    val allowSnooze: kotlin.Boolean? = null,
    @SerialName("message")
    val message: NotificationMessage? = null,
    /* NotificationInfo */
    @SerialName("type")
    val type: kotlin.String? = null
) {

}

